{
  "name": "TextForensics GPU Development",
  "dockerComposeFile": ["../docker-compose.yml"],
  "service": "textforensics-dev",
  "workspaceFolder": "/workspace",

  // Environment variables for development
  "containerEnv": {
    "PYTHONPATH": "/workspace/src",
    "WANDB_CONSOLE": "off",
    "CUDA_LAUNCH_BLOCKING": "0",
    "TORCH_CUDNN_V8_API_ENABLED": "1"
  },

  // VS Code customizations
  "customizations": {
    "vscode": {
      "extensions": [
        // Core Python Development
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.mypy-type-checker",
        "ms-python.isort",
        "ms-python.pylint",
        "ms-python.flake8",
        "ms-python.debugpy",
        "charliermarsh.ruff",

        // Testing & Quality
        "ms-python.pytest",
        "littlefoxteam.vscode-python-test-adapter",
        "hbenl.vscode-test-explorer",
        "formulahendry.code-runner",
        "ms-python.python-type-hints",

        // Jupyter & ML
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-notebook-renderers",
        "ms-python.tensorboard",
        "wandb.wandb-vscode",
        "ms-toolsai.vscode-ai",
        "ms-toolsai.jupyter-keymap",

        // Git & Version Control
        "eamodio.gitlens",
        "mhutchie.git-graph",
        "github.vscode-pull-request-github",
        "github.vscode-github-actions",
        "ms-vscode.vscode-github-issue-notebooks",
        "github.vscode-github-copilot",

        // AI Tools
        "github.copilot",
        "github.copilot-chat",

        // Docker & DevOps
        "ms-vscode-remote.remote-containers",
        "ms-azuretools.vscode-docker",
        "ms-vscode.vscode-docker-compose",
        "ms-kubernetes-tools.vscode-kubernetes-tools",

        // Configuration Files
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json",
        "tamasfe.even-better-toml",
        "ms-vscode.makefile-tools",
        "ms-vscode.vscode-task-buttons",

        // Documentation & Writing
        "yzhang.markdown-all-in-one",
        "davidanson.vscode-markdownlint",
        "ms-vscode.live-server",
        "shd101wyy.markdown-preview-enhanced",

        // Data & Visualization
        "mechatroner.rainbow-csv",
        "ms-python.data-wrangler",
        "randomfractalsinc.vscode-data-preview",
        "quarto.quarto",

        // Environment Management
        "donjayamanne.python-environment-manager",
        "ms-python.conda",
        "ms-python.vscode-pylance",

        // Productivity & UI
        "zhuangtongfa.material-theme",
        "pkief.material-icon-theme",
        "gruntfuggly.todo-tree",
        "wayou.vscode-todo-highlight",
        "ms-vscode.vscode-speech",

        // Performance & Monitoring
        "ms-vscode.vscode-edge-debug2",
        "ms-vscode.vscode-json-languageservice"
      ],
      "settings": {
        // Theme & UI
        "workbench.colorTheme": "One Dark Pro Flat",
        "workbench.iconTheme": "material-icon-theme",
        "workbench.startupEditor": "readme",
        "workbench.sideBar.location": "left",

        // Terminal
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.fontFamily": "'Fira Code', 'Courier New', monospace",
        "terminal.integrated.fontSize": 14,
        "terminal.integrated.copyOnSelection": true,
        "terminal.integrated.rightClickBehavior": "paste",

        // Python Configuration
        "python.defaultInterpreterPath": "/usr/bin/python3.12",
        "python.formatting.provider": "none",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.autoTestDiscoverOnSaveEnabled": true,

        // Code Formatting
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll.ruff": "explicit"
          }
        },

        // Jupyter Configuration
        "jupyter.askForKernelRestart": false,
        "jupyter.interactiveWindow.creationMode": "perFile",
        "jupyter.notebookFileRoot": "${workspaceFolder}",
        "jupyter.jupyterServerType": "local",

        // Git Configuration
        "git.enableSmartCommit": true,
        "git.confirmSync": false,
        "git.autofetch": true,
        "git-graph.repository.onLoad.showCheckedOutBranch": true,
        "git-graph.graph.colours": [
          "#0085d1", "#d73a49", "#28a745", "#ffd33d",
          "#f66a0a", "#6f42c1", "#e1e4e8"
        ],
        "gitlens.currentLine.enabled": false,
        "gitlens.codeLens.enabled": false,

        // Docker Configuration
        "docker.showStartPage": false,
        "docker.dockerComposeBuild": true,
        "docker.dockerComposeDetached": true,

        // File Associations
        "files.associations": {
          "*.yaml": "yaml",
          "*.yml": "yaml",
          ".hydra/**/*.yaml": "yaml",
          "*.toml": "toml",
          "Dockerfile*": "dockerfile",
          "*.cu": "cuda-cpp"
        },

        // Editor Configuration
        "editor.fontSize": 14,
        "editor.fontLigatures": true,
        "editor.minimap.enabled": true,
        "editor.rulers": [88, 120],
        "editor.wordWrap": "on",
        "editor.bracketPairColorization.enabled": true,
        "editor.guides.bracketPairs": true,
        "editor.inlineSuggest.enabled": true,

        // Search Configuration
        "search.exclude": {
          "**/outputs": true,
          "**/multirun": true,
          "**/.hydra": true,
          "**/wandb": true,
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/node_modules": true,
          "**/.mypy_cache": true
        },

        // ML/AI Specific Settings
        "tensorBoard.logDirectory": "${workspaceFolder}/outputs/logs",
        "wandb.project": "textforensics",

        // Task Configuration
        "task.showDecorations": true,
        "task.quickOpen.history": 10,

        // Performance
        "files.watcherExclude": {
          "**/.git/objects/**": true,
          "**/.git/subtree-cache/**": true,
          "**/node_modules/*/**": true,
          "**/.mypy_cache/**": true,
          "**/__pycache__/**": true
        }
      }
    }
  },

  // Comprehensive port forwarding
  "forwardPorts": [8888, 6006, 8097, 8000, 7860, 5000, 3000, 5432, 6379],
  "portsAttributes": {
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "notify"
    },
    "6006": {
      "label": "TensorBoard",
      "onAutoForward": "ignore"
    },
    "8097": {
      "label": "Wandb",
      "onAutoForward": "ignore"
    },
    "8000": {
      "label": "FastAPI",
      "onAutoForward": "ignore"
    },
    "7860": {
      "label": "Gradio",
      "onAutoForward": "ignore"
    },
    "5000": {
      "label": "Live Server",
      "onAutoForward": "ignore"
    },
    "3000": {
      "label": "Development Server",
      "onAutoForward": "ignore"
    },
    "5432": {
      "label": "PostgreSQL",
      "onAutoForward": "ignore"
    },
    "6379": {
      "label": "Redis",
      "onAutoForward": "ignore"
    }
  },

  // Lifecycle commands
  "postCreateCommand": "bash -c 'echo \"üöÄ TextForensics GPU development environment ready! RTX 5070 Ti detected.\" && echo \"üì¶ Installing pre-commit hooks...\" && pre-commit install --install-hooks && echo \"‚úÖ Environment setup complete!\"'",
  "postStartCommand": "echo 'üî• Container started! GPU status:' && python -c 'import torch; print(f\"CUDA: {torch.cuda.is_available()}\")'",

  // Development container features
  "features": {
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": false,
      "configureZshAsDefaultShell": false,
      "installOhMyZsh": false,
      "upgradePackages": true,
      "username": "root"
    }
  },

  // Mount configuration for optimal performance
  "mounts": [
    "source=${localWorkspaceFolder}/.vscode,target=/workspace/.vscode,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/.git,target=/workspace/.git,type=bind,consistency=cached"
  ],

  // Development optimizations
  "initializeCommand": "echo 'üèóÔ∏è Initializing TextForensics development environment...'",
  "onCreateCommand": "echo 'üìã Creating development container...'",

  // Security and permissions
  "privileged": false,
  "remoteUser": "root",
  "updateRemoteUserUID": false,

  // Development workflow
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
}
